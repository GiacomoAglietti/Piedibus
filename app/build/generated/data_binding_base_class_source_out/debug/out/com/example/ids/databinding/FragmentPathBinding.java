// Generated by view binder compiler. Do not edit!
package com.example.ids.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ids.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPathBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FragmentContainerView googleMapsFragment2;

  @NonNull
  public final ImageButton imgBtnGpsOff;

  @NonNull
  public final ImageButton imgBtnGpsOn;

  @NonNull
  public final FragmentContainerView placeAutocompleteFragment;

  @NonNull
  public final Button saveNewStopBtn;

  private FragmentPathBinding(@NonNull RelativeLayout rootView,
      @NonNull FragmentContainerView googleMapsFragment2, @NonNull ImageButton imgBtnGpsOff,
      @NonNull ImageButton imgBtnGpsOn, @NonNull FragmentContainerView placeAutocompleteFragment,
      @NonNull Button saveNewStopBtn) {
    this.rootView = rootView;
    this.googleMapsFragment2 = googleMapsFragment2;
    this.imgBtnGpsOff = imgBtnGpsOff;
    this.imgBtnGpsOn = imgBtnGpsOn;
    this.placeAutocompleteFragment = placeAutocompleteFragment;
    this.saveNewStopBtn = saveNewStopBtn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPathBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPathBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_path, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPathBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.google_maps_fragment2;
      FragmentContainerView googleMapsFragment2 = ViewBindings.findChildViewById(rootView, id);
      if (googleMapsFragment2 == null) {
        break missingId;
      }

      id = R.id.img_btn_gps_off;
      ImageButton imgBtnGpsOff = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnGpsOff == null) {
        break missingId;
      }

      id = R.id.img_btn_gps_on;
      ImageButton imgBtnGpsOn = ViewBindings.findChildViewById(rootView, id);
      if (imgBtnGpsOn == null) {
        break missingId;
      }

      id = R.id.place_autocomplete_fragment;
      FragmentContainerView placeAutocompleteFragment = ViewBindings.findChildViewById(rootView, id);
      if (placeAutocompleteFragment == null) {
        break missingId;
      }

      id = R.id.saveNewStop_btn;
      Button saveNewStopBtn = ViewBindings.findChildViewById(rootView, id);
      if (saveNewStopBtn == null) {
        break missingId;
      }

      return new FragmentPathBinding((RelativeLayout) rootView, googleMapsFragment2, imgBtnGpsOff,
          imgBtnGpsOn, placeAutocompleteFragment, saveNewStopBtn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
