// Generated by view binder compiler. Do not edit!
package com.example.ids.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ids.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnLogin;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final EditText edtTxtEmail;

  @NonNull
  public final EditText edtTxtPassword;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final LinearLayout linearLayoutParent;

  @NonNull
  public final TextView txtViewLogin;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnLogin, @NonNull ConstraintLayout constraintLayout,
      @NonNull EditText edtTxtEmail, @NonNull EditText edtTxtPassword, @NonNull ImageView imageView,
      @NonNull LinearLayout linearLayoutParent, @NonNull TextView txtViewLogin) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.constraintLayout = constraintLayout;
    this.edtTxtEmail = edtTxtEmail;
    this.edtTxtPassword = edtTxtPassword;
    this.imageView = imageView;
    this.linearLayoutParent = linearLayoutParent;
    this.txtViewLogin = txtViewLogin;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_login;
      AppCompatButton btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.edtTxt_email;
      EditText edtTxtEmail = ViewBindings.findChildViewById(rootView, id);
      if (edtTxtEmail == null) {
        break missingId;
      }

      id = R.id.edtTxt_password;
      EditText edtTxtPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtTxtPassword == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.linearLayout_parent;
      LinearLayout linearLayoutParent = ViewBindings.findChildViewById(rootView, id);
      if (linearLayoutParent == null) {
        break missingId;
      }

      id = R.id.txtView_login;
      TextView txtViewLogin = ViewBindings.findChildViewById(rootView, id);
      if (txtViewLogin == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnLogin, constraintLayout,
          edtTxtEmail, edtTxtPassword, imageView, linearLayoutParent, txtViewLogin);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
