// Generated by view binder compiler. Do not edit!
package com.example.ids.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ids.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListStopsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView deleteImgV;

  @NonNull
  public final ImageView dragAndDropImgV;

  @NonNull
  public final TextView nameStopTextV;

  @NonNull
  public final TextView numStopTextV;

  private ListStopsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView deleteImgV,
      @NonNull ImageView dragAndDropImgV, @NonNull TextView nameStopTextV,
      @NonNull TextView numStopTextV) {
    this.rootView = rootView;
    this.deleteImgV = deleteImgV;
    this.dragAndDropImgV = dragAndDropImgV;
    this.nameStopTextV = nameStopTextV;
    this.numStopTextV = numStopTextV;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListStopsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListStopsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_stops, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListStopsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_imgV;
      ImageView deleteImgV = ViewBindings.findChildViewById(rootView, id);
      if (deleteImgV == null) {
        break missingId;
      }

      id = R.id.drag_and_drop_imgV;
      ImageView dragAndDropImgV = ViewBindings.findChildViewById(rootView, id);
      if (dragAndDropImgV == null) {
        break missingId;
      }

      id = R.id.name_stop_textV;
      TextView nameStopTextV = ViewBindings.findChildViewById(rootView, id);
      if (nameStopTextV == null) {
        break missingId;
      }

      id = R.id.num_stop_textV;
      TextView numStopTextV = ViewBindings.findChildViewById(rootView, id);
      if (numStopTextV == null) {
        break missingId;
      }

      return new ListStopsBinding((ConstraintLayout) rootView, deleteImgV, dragAndDropImgV,
          nameStopTextV, numStopTextV);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
